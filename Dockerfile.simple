# ---------- Frontend Build ----------
FROM node:20-alpine AS frontend-builder
WORKDIR /app/frontend

COPY frontend/package*.json ./
RUN npm ci --only=production

COPY frontend/ ./
RUN npm run build

# ---------- Backend Build ----------
FROM node:20-alpine AS backend-builder
WORKDIR /app

COPY package*.json ./
COPY tsconfig.json ./
RUN npm ci --only=production

COPY src/ ./src/
COPY prisma/ ./prisma/
RUN npx prisma generate
RUN npm run build:server

# ---------- Runtime ----------
FROM node:20-alpine AS runner
WORKDIR /app

# Install Python for FastAPI proxy
RUN apk add --no-cache python3 py3-pip

# Copy built backend
COPY --from=backend-builder /app/dist ./dist
COPY --from=backend-builder /app/node_modules ./node_modules
COPY --from=backend-builder /app/package.json ./
COPY --from=backend-builder /app/prisma ./prisma

# Copy built frontend
COPY --from=frontend-builder /app/frontend/dist ./frontend/dist

# Copy Python proxy
COPY backend/server.py backend/requirements.txt ./backend/
RUN pip3 install --no-cache-dir -r backend/requirements.txt

# Simple startup script
COPY <<EOF /app/start.sh
#!/bin/sh
echo "ðŸš€ Starting Restaurant App..."

# Start Node.js backend in background
node dist/server.js &

# Start FastAPI proxy in foreground
python3 backend/server.py
EOF

RUN chmod +x start.sh

# Environment defaults
ENV NODE_ENV=production
ENV PORT=8002

EXPOSE 8001

# Simple healthcheck
HEALTHCHECK --interval=30s --timeout=5s --start-period=10s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:8001/health || exit 1

CMD ["./start.sh"]