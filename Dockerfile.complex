# Multi-stage build for Restaurant Bookkeeping App
FROM node:18-bullseye as frontend-builder

# Install frontend dependencies and build
WORKDIR /app/frontend
COPY frontend/package.json frontend/package-lock.json* ./
RUN npm ci --only=production

# Copy frontend source and build
COPY frontend/ ./
RUN npm run build

# Backend TypeScript build stage
FROM node:18-bullseye as backend-builder

WORKDIR /app
COPY package.json package-lock.json* tsconfig.json ./
COPY src/ ./src/
COPY prisma/ ./prisma/

# Install dependencies and build
RUN npm ci --only=production
RUN npx prisma generate
RUN npm run build:server

# Final runtime image
FROM node:18-bullseye

# Install system dependencies
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    supervisor \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Copy built backend (production dependencies only)
COPY --from=backend-builder /app/dist ./dist
COPY --from=backend-builder /app/node_modules ./node_modules
COPY --from=backend-builder /app/package.json ./
COPY --from=backend-builder /app/package-lock.json* ./
COPY --from=backend-builder /app/prisma ./prisma

# Copy built frontend
COPY --from=frontend-builder /app/frontend/dist ./frontend/dist

# Copy Python FastAPI proxy
COPY backend/server.py backend/requirements.txt ./backend/
RUN pip3 install --no-cache-dir -r backend/requirements.txt

# Copy configuration files
COPY docker/supervisord.conf /etc/supervisor/conf.d/supervisord.conf
COPY docker/startup.sh ./docker/startup.sh
COPY docker/seed-container.js ./docker/seed-container.js
RUN chmod +x docker/startup.sh

# Create log directory
RUN mkdir -p /var/log/supervisor

# Set environment variables (will be overridden by Helm)
ENV NODE_ENV=production
ENV DATABASE_URL=""
ENV JWT_SECRET=""
ENV JWT_EXPIRES_IN="8h"
ENV JWT_REFRESH_EXPIRES_IN="7d"
ENV PORT=8002

# Expose port
EXPOSE 8001

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8001/health || exit 1

# Start services with supervisor
CMD ["/app/docker/startup.sh"]